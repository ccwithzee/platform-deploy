---
name: Deploy Checks (Helm + Kubeconform)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest
    env:
      KUBE_VERSION: "1.29.0"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Setup Helm with cache
      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4

      - name: Cache Helm plugins
        uses: actions/cache@v3
        with:
          path: ~/.cache/helm
          key: helm-cache-${{ hashFiles('charts/**/Chart.yaml') }}

      # Cache Prettier & Yamllint
      - name: Cache Prettier & Yamllint
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ~/.local/bin
          key: yaml-tools-${{ runner.os }}-prettier-${{ hashFiles('fix-lintf.sh') }}

      # Install Prettier & Yamllint (+ coreutils for csplit)
      - name: Install Prettier & Yamllint
        run: |
          sudo npm install -g prettier
          sudo apt-get update
          sudo apt-get install -y yamllint coreutils

      # Run fix-lintf.sh (renders charts, lints YAML, checks empty values)
      - name: Run YAML Lint + Helm render checks
        run: |
          chmod +x ./fix-lintf.sh
          ./fix-lintf.sh

      # Setup Go for kubeconform
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      # Install kubeconform
      - name: Install kubeconform
        run: |
          go install github.com/yannh/kubeconform/cmd/kubeconform@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      # Run kubeconform on fully linted YAMLs
      - name: kubeconform validate (strict)
        run: |
          set -euo pipefail
          mkdir -p rendered
          cp /tmp/helm-lint/* rendered/
          kubeconform -strict -summary -ignore-missing-schemas -kubernetes-version ${KUBE_VERSION} rendered/*.yaml
